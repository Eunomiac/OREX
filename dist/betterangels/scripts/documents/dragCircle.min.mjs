/* ▌██░░ betterangels v0.0.1-prealpha (2021) ║ MIT License ║ https://github.com/Eunomiac/betterangels ░░██▐ */import gsap,{Draggable as GSDraggable,InertiaPlugin,MotionPathPlugin,CustomWiggle,CustomEase}from"/scripts/greensock/esm/all.js";const REGISTRY={},{getProperty:get,utils:{random:random,distribute:distribute,splitColor:splitColor,mapRange:mapRange}}=gsap,joinColor=(i,t,e,s=1)=>`rgba(${i}, ${t}, ${e}, ${s})`;$('<div id="roll-circle-container" />').appendTo(".vtt.game.system-betterangels");class RollCircle{static get REGISTRY(){return this._REGISTRY=this._REGISTRY??{},this._REGISTRY}static RegisterCircle(i){const t=Object.keys(this.REGISTRY).length+1;i.id=`rollCircle-${t}`,this.REGISTRY[i.id]=i}constructor({x:i,y:t},e,s){this.x=i,this.y=t,this.radius=e,[this.r,this.g,this.b]=splitColor(s),RollCircle.RegisterCircle(this),this.draw()}get color(){return joinColor(this.r,this.g,this.b)}get id(){return this._id}set id(i){this._id=i,[this.index]=i.match(/\d+$/)}get index(){return this._index}set index(i){this._index=parseInt(i)}get childDice(){return this._childDice=this._childDice??[]}draw(){[this.elem]=$(`<svg id="${this.id}" class="roll-circle" height="${2*this.radius}" width="${2*this.radius}">\n        <circle r="50%" stroke="none" fill="${this.color}" cx="50%" cy="50%" />\n       </svg>`).appendTo("#roll-circle-container"),gsap.set(`#${this.id}`,{xPercent:-50,yPercent:-50,x:this.x,y:this.y})}initDie(){this.childDice.push(new OREDie(this))}addDie(i){this.childDice.push(i)}remDie(i){this._childDice=this.childDice.filter((t=>i!==t))}distributeDice(){const i=.8*this.radius,t=360/(this.childDice.length+1);let e=0;this.childDice.forEach((s=>{e+=t,gsap.set(s.elem,{xPercent:-50,yPercent:-50,x:i*Math.cos(e*(Math.PI/180)),y:i*Math.sin(e*(Math.PI/180))})}))}}class OREDie{static get REGISTRY(){return this._REGISTRY=this._REGISTRY??{},this._REGISTRY}static RegisterDie(i,t){const e=Object.keys(this.REGISTRY).length+1;i.id=`die-${e}`,i.homeCircle=t,this.REGISTRY[i.id]=i}constructor(i){OREDie.RegisterDie(this,i),this.draw()}draw(){[this.elem]=$(`<circle id="${this.id}" r="30px" stroke="#FFFFFF" fill="lime">&nbsp;</circle>`).appendTo(this.homeCircle.elem),gsap.set(this.elem,{xPercent:-50,yPercent:-50,transformOrigin:"50% 50%"})}}export default()=>{gsap.registerPlugin(GSDraggable,InertiaPlugin,MotionPathPlugin),[[{x:100,y:100},100,"lime"],[{x:1100,y:100},100,"cyan"],[{x:600,y:750},100,"pink"]].forEach((i=>{const t=new RollCircle(...i);for(let i=0;i<6;i++)t.initDie();t.distributeDice()}))};