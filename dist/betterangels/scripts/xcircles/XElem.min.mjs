import{gsap as t,MotionPathPlugin as s,U as i,MIX as e,Positioner as h}from"../helpers/bundler.mjs";export default class r extends(e().t(h)){static get i(){return{id:"x-container",h:["x-container"]}}static get o(){return this.g=this.g??this.u()}static get l(){return{position:"absolute",p:-50,$:-50,transformOrigin:"50% 50%"}}static u(){this.g=new r('<div id="#x-container" class="x-container" />',{properties:i.m(this.l,(t=>null)),parent:new r(this.i.T)})}get(s){return t.A(this.N,s)}set(s={}){t.set(this.N,s)}constructor(t,{properties:e={},parent:h,v:n}={}){super();const o={};i.S(t)?(h=h??r.o,Object.assign(o,this.constructor.l),n?([this.C]=s.O($(`<svg>${t}</svg>`).find("*").D(h.M.find("svg"))[0]),this.P=$(this.C)):(this.P=$(t),[this.C]=this.M,console.log(this))):n?([this.C]=s.O($(t)[0]),this.P=$(this.C)):(this.P=$(t),[this.C]=this.M),this.set(i.R({...o,...e},(t=>null!==t)))}get M(){return this.P}get N(){return this.C}get id(){return this._=this._??this.N.id}get G(){return this.I=this.I??`#${this.id}`}get selector(){return this.V=this.V??t.j.selector(this.N)}get tag(){return this.N.tagName}get k(){return this.N instanceof SVGElement||$(`<svg>${this.N.outerHTML}</svg>`).find("*")[0]instanceof SVGElement}H(){this.M.remove()}get x(){return this.get("x")}set x(t){this.set({x:t})}get y(){return this.get("y")}set y(t){this.set({y:t})}get L(){return{x:this.x,y:this.y}}set L({x:t,y:s}){this.set({x:t,y:s})}get left(){return this.x-.5*this.width}set left(t){this.x=t+.5*this.width}get top(){return this.y-.5*this.height}set top(t){this.y=t+.5*this.height}get right(){return this.x+.5*this.width}set right(t){this.x=t-.5*this.width}get bottom(){return this.y+.5*this.height}set bottom(t){this.y=t-.5*this.height}get height(){return this.get("height")}set height(t){this.set({height:t})}get width(){return this.get("width")}set width(t){this.set({width:t})}get F(){return(this.height+this.width)/4}set F(t){const s=t/this.F;this.set({height:this.height*s,width:this.width*s})}get rotation(){return t.A(this.N,"rotation")}set rotation(s){if(/^[+-]=/.test(`${s}`)&&(s=this.rotation+i.J(`${s}`.replace(/=/g,""))),!["int","float"].includes(i.getType(s)))throw new Error(`Cannot set rotation to a non-number value: ${JSON.stringify(s)}`);t.set(this.N,{rotation:s})}q({x:t,y:s}){return i.B(this,{x:t,y:s})}K({x:t,y:s}){return i.U(this.q({x:t,y:s})-this.rotation+180,-180,180)}W({x:t,y:s}){return i.X(this,{x:t,y:s})}get parent(){return this.Y}set parent(t){const[i]=$(`#${t?.id??"noElemFound"}`);if(!i)throw new Error(`[${this.constructor.name}.parent] No element found for '${t}'`);{const{x:e,y:h}=s.Z(this.parent?.N??this.parent??this.N,i,{x:this.x,y:this.y});this.Y=t,this.set({x:e,y:h}),this.M.D(i)}}get tt(){return this.constructor.st??[]}get h(){return this.N?.classList}set h(t){if(this.h){const s=[...this.tt??[],...Array.from([t]).flat().join(" ").trim().split(" ")];this.h.forEach((t=>{s.includes(t)||this.h.remove(t)})),t.forEach((t=>this.h.add(t)))}}get text(){return this.get("innerText")}set text(t){this.set({innerText:t})}get it(){return this.get("innerHTML")}set it(t){this.set({innerHTML:t})}}