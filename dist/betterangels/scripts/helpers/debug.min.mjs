import{gsap as t,Dragger as e,InertiaPlugin as s,MotionPathPlugin as i,GSDevTools as n,U as a,XElem as r,XCircle as o,XItem as h,XDie as c,XSnap as d}from"./bundler.mjs";const l={t:[0,0],i:[375,414],o:[100,100],h:[1370,100],left:[100,414],right:[1370,414],l:[100,729],g:[1370,729]};export default class{constructor(t){[this.p]=$('<div id="dbContainer" class="db x-container" />').appendTo(".vtt.game"),this.$(t),this.u(!0)}get D(){return this.p}m(t){this.v=t}P(t){this.S&&this.S.I.A("db-flagged"),t.I.k("db-flagged"),this.S=t}C(){this.F.forEach(this.O),this.R()}j(){this.F.forEach(this.B),this.M()}$(t={i:5}){window.CIRCLES=window.CIRCLES??[];const e=a.U(Object.values(o.L));for(const[s,i]of Object.entries(t)){const t=new o(...l[s],100,{type:e.next().value});t.N(i),window.CIRCLES.push(t)}}get F(){return this.W=this.W??[]}H(e){return{[`${e.id}Straightener`](){t.set(`#${e.id} .db.angle-marker`,{rotation:-1*e.rotation})}}[`${e.id}Straightener`]}q(t){this.F.includes(t)||(this.F.push(t),this.O(t))}G(t){this.W=this.F.filter((e=>e.name!==t.name)),this.B(t)}O(e,s=4,n=!1){[e.J]=$(`\n    <svg height="100%" width="100%">\n      <path id="db-${e.id}" class="db snap-circle" fill="none" stroke="none" d="${a.K(1.25*e.V,{x:e.V,y:e.V})}"></path>\n    </svg>\n    `).appendTo(this.D),t.set(e.J,{X:-50,Y:-50,x:e.x,y:e.y}),e.Z=i._(`#db-${e.id}`),i.tt(e.Z);this.B(e),[...Array(s)].map(((e,i)=>t.st.et(0,s,-180,180,i))).forEach((s=>(s=>{e.it=e.it??{};const n=Math.round(100*t.st.normalize(-180,180,s))/100,{x:a,y:r,angle:o}=i.nt(e.Z,n,!0);[e.it[s]]=$(`<div class="db angle-marker">${parseInt(o)}<br>${n}</div>`).appendTo(e.rt),t.set(e.it[s],{x:a,y:r,X:-50,Y:-50,rotation:-1*e.rotation})})(s))),e.ot=this.H(e),t.ht.add(e.ot)}B(e){t.ht.remove(e.ot),$(`#${e.id} .angle-marker`).remove()}ct(t,e=0,s=null){(s=s??(this.dt=this.dt??r.lt.find((t=>t instanceof o))))&&([s.gt[t],s.gt[e]]=[s.gt[e],s.gt[t]],s.bt(),s.yt(10))}get $t(){return this.ft=this.ft??[]}xt(t){const e=this;return{[`${t.id}DieUpdater`](){t.gt.forEach((t=>{if(t instanceof c){const s=['<table class="db db-display">'];e.$t.forEach((e=>{const i=["<tr>"];e.forEach((s=>{let n=t[s]??n;"number"==typeof n&&(n=Math.abs(n)<1?`${n<0?"-":""}.${a.ut(100*n)}`:1===Math.abs(n)?(n<0?"-":"")+"1.0":a.ut(n)),i.push(`<td class="db db-data" colspan="${3-e.length}">${n}</td>`)})),i.push("</tr>"),s.push(i.join(""))})),s.push("</table>"),t.wt=s.join("")}}))}}[`${t.id}DieUpdater`]}u(t=!0){r.lt.filter((t=>t instanceof c)).forEach((e=>e.text=t?e.slot:""))}Dt(t){this.$t.push([t].flat())}vt(e){e.gt.forEach((t=>{t instanceof c&&t.I.k("db-display")})),e.Pt=this.xt(e),t.ht.add(e.Pt)}St(e){e.gt.forEach((t=>{t instanceof c&&(t.I.A("db-display"),t.I.A("db-flagged"),t.text=t.slot)})),t.ht.remove(e.Pt)}ping({x:e,y:s},{V:n=20,color:a="yellow",At:r}={}){const[o]=$(`<svg class="db" height="100%" width="100%">\n      <circle cx="${n}" cy="${n}" r="${n}" fill="${a}" stroke="none" />\n    </svg>`).appendTo(this.D).children().last();r&&({x:e,y:s}=i.It(r,this.D.rt,{x:e,y:s})),t.set(o,{X:-50,Y:-50,transformOrigin:"50% 50%",x:e,y:s}),t.to(o,{opacity:1,scale:1,kt:{opacity:.25,scale:5},duration:1,Ct:"bounce",Ft(){t.to(o,{opacity:.5,scale:.25,duration:10,delay:5,Ct:"sine"})}})}Ot(){o.Rt.forEach(((t,e)=>{this.ping(e,{color:"basic"===t.type?"lime":t.type})}))}jt(t){const e=[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1].map((e=>{const{x:s,y:n,angle:a}=i.nt(t.Bt.path,e,!0),o=t.Mt(r.Ut,{x:s,y:n});return{Et:{x:parseInt(s),y:parseInt(n)},Lt:{x:parseInt(o.x),y:parseInt(o.y)},angle:parseInt(a),Nt:e}}));console.log(e)}}