import e from"/scripts/greensock/esm/all.js";const t=["above","after","at","below","by","down","for","from","in","onto","of","off","on","out","to","under","up","with","for","and","nor","but","or","yet","so","the","an","a"].map((e=>new RegExp(`\\b${e}\\b`,"gui"))),r=["I",/[^a-z]{3,}|[\.0-9]/gu].map((e=>/RegExp/.test(Object.prototype.toString.call(e))?e:new RegExp(`\\b${e}\\b`,"gui"))),a="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ultricies \nnibh sed massa euismod lacinia. Aliquam nec est ac nunc ultricies scelerisque porta vulputate odio. \nInteger gravida mattis odio, semper volutpat tellus. Ut elit leo, auctor eget fermentum hendrerit, \naliquet ac nunc. Suspendisse porta turpis vitae mi posuere molestie. Cras lectus lacus, vulputate a \nvestibulum in, mattis vel mi. Mauris quis semper mauris. Praesent blandit nec diam eget tincidunt. Nunc \naliquet consequat massa ac lacinia. Ut posuere velit sagittis, vehicula nisl eget, fringilla nibh. Duis \nvolutpat mattis libero, a porttitor sapien viverra ut. Phasellus vulputate imperdiet ligula, eget \neleifend metus tempor nec. Nam eget sapien risus. Praesent id suscipit elit. Sed pellentesque ligula \ndiam, non aliquet magna feugiat vitae. Pellentesque ut tortor id erat placerat dignissim. Pellentesque \nut dui vel leo laoreet sodales nec ac tellus. In hac habitasse platea dictumst. Proin sed ex sed augue \nsollicitudin interdum. Sed id lacus porttitor nisi vestibulum tincidunt. Nulla facilisi. Vestibulum \nfeugiat finibus magna in pretium. Proin consectetur lectus nisi, non commodo lectus tempor et. Cras \nviverra, mi in consequat aliquet, justo mauris fringilla tellus, at accumsan magna metus in eros. Sed \nvehicula, diam ut sagittis semper, purus massa mattis dolor, in posuere.",o=["aboveboard","account","achiever","acoustics","act","action","activity","actor","addition","adjustment","advertisement","advice","afterglow","afterimage","afterlife","aftermath","afternoon","afterthought","agreement","air","aircraft","airfield","airlift","airline","airmen","airplane","airport","airtime","alarm","allover","allspice","alongside","also","amount","amusement","anger","angle","animal","another","ants","anyhow","anymore","anyone","anyplace","anytime","anywhere","apparatus","apparel","appliance","approval","arch","argument","arithmetic","arm","army","around","art","ashtray","attack","attraction","aunt","authority","babies","baby","babysitter","back","backache","backbone","backbreaker","backdrop","backfire","background","backhand","backlash","backlog","backpack","backside","backslap","backslide","backspace","backspin","backstroke","backtrack","backward","badge","bag","bait","balance","ball","ballroom","bankbook","bankroll","base","baseball","basin","basket","basketball","bat","bath","battle","beachcomb","bead","bear","because","become","bed","bedrock","bedroll","bedroom","beds","bee","beef","beginner","behavior","belief","believe","bell","bellboy","bellhop","bells","below","berry","bike","bikes","bird","birds","birth","birthday","bit","bite","blackball","blackberries","blackbird","blackboard","blackjack","blacklist","blackmail","blackout","blacksmith","blacktop","blade","blood","blow","blowgun","bluebell","blueberry","bluebird","bluefish","bluegrass","blueprint","board","boardwalk","boat","bodyguard","bomb","bone","book","bookcase","bookend","bookkeeper","bookmark","bookmobile","books","bookseller","bookshelf","bookworm","boot","border","bottle","boundary","bowlegs","bowtie","box","boy","brainchild","brake","branch","brass","breath","brick","bridge","brother","bubble","bucket","bugspray","building","bulb","burst","bushes","business","butter","butterball","buttercup","butterfingers","buttermilk","butternut","butterscotch","button","bypass","cabbage","cabdriver","cable","cactus","cake","cakes","calculator","calendar","camera","camp","can","cancan","candlelight","candlestick","cannon","cannot","canvas","cap","caption","car","card","cardsharp","care","carefree","careworn","carfare","carload","carpenter","carpool","carport","carriage","cars","carsick","cart","cartwheel","cast","cat","cats","cattle","catwalk","cause","cave","caveman","celery","cellar","cemetery","cent","centercut","chalk","chance","change","channel","cheese","cheeseburger","cherries","cherry","chess","chicken","chickens","children","chin","church","circle","clam","class","clockwise","cloth","clover","club","coach","coal","coast","coat","cobweb","coffeemaker","coil","collar","color","comeback","committee","commonplace","commonwealth","company","comparison","competition","condition","connection","control","cook","copper","corn","cornmeal","cough","country","courthouse","cover","cow","cows","crack","cracker","crate","crayon","cream","creator","creature","credit","crewcut","crib","crime","crook","crossbow","crossbreed","crosscut","crossover","crosswalk","crow","crowd","crown","cub","cup","current","curtain","curve","cushion","dad","dairymaid","daisywheel","daughter","day","daybed","daybook","daybreak","daydream","daylight","daytime","deadend","deadline","death","debt","decision","deer","degree","design","desire","desk","destruction","detail","development","digestion","dime","dinner","dinosaurs","direction","dirt","discovery","discussion","dishcloth","dishpan","dishwasher","dishwater","diskdrive","distance","distribution","division","dock","doctor","dog","dogs","doll","dolls","donkey","door","doorstop","downtown","downunder","drain","drawbridge","drawer","dress","drink","driveway","driving","drop","duck","duckbill","duckpin","ducks","dust","ear","earache","earring","earth","earthquake","earthward","earthworm","edge","education","effect","egg","egghead","eggnog","eggs","eggshell","elbow","end","engine","error","event","everything","example","exchange","existence","expansion","experience","expert","eye","eyeballs","eyecatching","eyeglasses","eyelash","eyelid","eyes","eyesight","eyewitness","face","fact","fairies","fall","fang","farm","fatherland","fear","feeling","field","finger","fire","fireball","fireboat","firebomb","firebreak","firecracker","firefighter","firehouse","fireman","fireproof","fireworks","fish","fishbowl","fisherman","fisheye","fishhook","fishmonger","fishnet","fishpond","fishtail","flag","flame","flavor","flesh","flight","flock","floor","flower","flowers","fly","fog","fold","food","foot","football","foothill","footlights","footlocker","footprints","forbearer","force","forearm","forebear","forebrain","forecast","foreclose","foreclosure","foredoom","forefather","forefeet","forefinger","forefoot","forego","foregone","forehand","forehead","foreknowledge","foreleg","foreman","forepaws","foresee","foreshadow","forestall","forethought","foretold","forever","forewarn","foreword","forget","fork","forklift","form","fowl","frame","friction","friend","friends","frog","frogs","front","fruit","fruitcup","fuel","furniture","gate","gearshift","geese","ghost","giants","giraffe","girl","girls","glass","glassmaking","glove","gold","goodbye","goodnight","government","governor","grade","grain","grandaunt","granddaughter","grandfather","grandmaster","grandmother","grandnephew","grandparent","grandson","grandstand","granduncle","grape","grass","grassland","graveyard","grip","ground","group","growth","guide","guitar","gumball","gun","hair","haircut","hall","hamburger","hammer","hand","handbook","handgun","handmade","handout","hands","harbor","harmony","hat","hate","head","headache","headlight","headline","headquarters","health","heat","hereafter","hereby","herein","hereupon","highchair","highland","highway","hill","himself","history","hobbies","hole","holiday","home","homemade","hometown","honey","honeybee","honeydew","honeysuckle","hook","hookup","hope","horn","horse","horseback","horsefly","horsehair","horseman","horseplay","horsepower","horseradish","horses","hose","hospital","hot","hour","house","houseboat","household","housekeeper","houses","housetop","however","humor","hydrant","ice","icicle","idea","impulse","income","increase","industry","ink","insect","inside","instrument","insurance","intake","interest","invention","iron","island","itself","jail","jailbait","jam","jar","jeans","jelly","jellybean","jellyfish","jetliner","jetport","jewel","join","judge","juice","jump","jumpshot","kettle","key","keyboard","keyhole","keynote","keypad","keypunch","keystone","keystroke","keyword","kick","kiss","kittens","kitty","knee","knife","knot","knowledge","laborer","lace","ladybug","lake","lamp","land","language","laugh","leather","leg","legs","letter","letters","lettuce","level","library","lifeblood","lifeguard","lifelike","lifeline","lifelong","lifetime","lifework","limelight","limestone","limit","line","linen","lip","liquid","loaf","lock","locket","longhand","look","loss","love","low","lukewarm","lumber","lunch","lunchroom","machine","magic","maid","mailbox","mainline","man","marble","mark","market","mask","mass","match","matchbox","meal","meantime","meanwhile","measure","meat","meeting","memory","men","metal","mice","middle","milk","mind","mine","minister","mint","minute","mist","mitten","mom","money","monkey","month","moon","moonbeam","moonlight","moonlit","moonscape","moonshine","moonstruck","moonwalk","moreover","morning","mother","motion","motorcycle","mountain","mouth","move","muscle","name","nation","nearby","neck","need","needle","nerve","nest","nevermore","newsboy","newsbreak","newscaster","newsdealer","newsletter","newsman","newspaper","newsprint","newsreel","newsroom","night","nightfall","nobody","noise","noisemaker","north","northeast","nose","note","notebook","nowhere","number","nursemaid","nut","nutcracker","oatmeal","observation","ocean","offer","office","oil","oneself","onetime","orange","oranges","order","oven","overboard","overcoat","overflow","overland","pacemaker","page","pail","pan","pancake","paper","parcel","part","partner","party","passbook","passenger","passkey","Passover","passport","payment","peace","pear","pen","pencil","peppermint","person","pest","pet","pets","pickle","pickup","picture","pie","pies","pig","pigs","pin","pinhole","pinstripe","pinup","pinwheel","pipe","pizzas","place","plane","planes","plant","plantation","plants","plastic","plate","play","playback","playground","playhouse","playthings","pleasure","plot","plough","pocket","point","poison","pollution","ponytail","popcorn","porter","position","postcard","pot","potato","powder","power","price","produce","profit","property","prose","protest","pull","pump","punishment","purpose","push","quarter","quartz","queen","question","quicksand","quiet","quill","quilt","quince","quiver","rabbit","rabbits","racquetball","rail","railroad","railway","rain","raincheck","raincoat","rainstorm","rainwater","rake","range","rat","rate","rattlesnake","rattletrap","ray","reaction","reading","reason","receipt","recess","record","regret","relation","religion","repairman","representative","request","respect","rest","reward","rhythm","rice","riddle","rifle","ring","rings","river","riverbanks","road","robin","rock","rod","roll","roof","room","root","rose","route","rub","rubberband","rule","run","sack","sail","sailboat","salesclerk","salt","sand","sandlot","sandstone","saucepan","scale","scapegoat","scarecrow","scarf","scene","scent","school","schoolbook","schoolboy","schoolbus","schoolhouse","science","scissors","screw","sea","seashore","seat","secretary","seed","selection","self","sense","servant","shade","shadyside","shake","shame","shape","sharecropper","sharpshooter","sheep","sheepskin","sheet","shelf","ship","shirt","shock","shoe","shoelace","shoemaker","shoes","shop","shortbread","show","showoff","showplace","side","sidekick","sidewalk","sign","silk","silver","silversmith","sink","sister","sisterhood","sisters","sixfold","size","skate","skateboard","skin","skintight","skirt","sky","skylark","skylight","slave","sleep","sleet","slip","slope","slowdown","slumlord","smash","smell","smile","smoke","snail","snails","snake","snakes","snakeskin","sneeze","snow","snowball","snowbank","snowbird","snowdrift","snowshovel","soap","society","sock","soda","sofa","softball","somebody","someday","somehow","someone","someplace","something","sometimes","somewhat","somewhere","son","song","songs","sort","sound","soundproof","soup","southeast","southwest","soybean","space","spacewalk","spade","spark","spearmint","spiders","spillway","spokesperson","sponge","spoon","spot","spring","spy","square","squirrel","stage","stagehand","stamp","standby","standoff","standout","standpoint","star","starfish","start","statement","station","steam","steamship","steel","stem","step","stepson","stew","stick","sticks","stitch","stocking","stockroom","stomach","stone","stop","stoplight","stopwatch","store","story","stove","stranger","straw","stream","street","stretch","string","stronghold","structure","substance","subway","sugar","suggestion","suit","summer","sun","sunbaked","sunbathe","sundial","sundown","sunfish","sunflower","sunglasses","sunlit","sunray","sunroof","sunup","supercargo","supercharge","supercool","superego","superfine","supergiant","superhero","superhighways","superhuman","superimpose","supermarket","supermen","supernatural","superpower","superscript","supersensitive","supersonic","superstar","superstrong","superstructure","supertanker","superweapon","superwoman","support","surprise","sweater","sweetheart","sweetmeat","swim","swing","system","table","tablecloth","tablespoon","tabletop","tableware","tail","tailcoat","tailgate","taillight","taillike","tailpiece","tailspin","takeoff","takeout","takeover","talebearer","taleteller","talk","tank","tapeworm","taproom","taproot","target","taskmaster","taste","tax","taxicab","taxpayer","teaching","teacup","team","teammate","teamwork","teapot","teaspoon","teenager","teeth","telltale","temper","tendency","tenderfoot","tenfold","tent","territory","test","textbook","texture","theory","therefore","thing","things","thought","thread","thrill","throat","throne","throwaway","throwback","thumb","thunder","thunderbird","thunderstorm","ticket","tiger","time","timekeeper","timesaving","timeshare","timetable","tin","title","toad","toe","toes","together","tomatoes","tongue","toolbox","tooth","toothbrush","toothpaste","toothpick","top","touch","touchdown","town","township","toy","toys","trade","trail","train","trains","tramp","transport","tray","treatment","tree","trees","trick","trip","trouble","trousers","truck","trucks","tub","turkey","turn","turnabout","turnaround","turnbuckle","turndown","turnkey","turnoff","turntable","twig","twist","typewriter","umbrella","uncle","underachieve","underage","underarm","underbelly","underbid","undercharge","underclothes","undercover","undercut","underdevelop","underestimate","underexpose","underfoot","underground","underwear","unit","upbeat","upbringing","upcoming","update","upend","upgrade","upheaval","uphill","uphold","upkeep","upland","uplift","upload","upmarket","upon","uppercase","upperclassman","uppercut","uproar","uproot","upset","upshot","upside","upstage","upstairs","upstanding","upstart","upstate","upstream","uptake","upthrust","uptight","uptime","uptown","upward","upwind","use","vacation","value","van","vase","vegetable","veil","vein","verse","vessel","vest","view","visitor","voice","volcano","volleyball","voyage","waistline","walk","walkways","wall","walleyed","wallpaper","war","wardroom","warfare","warmblooded","warpath","wash","washbowl","washcloth","washhouse","washout","washrag","washroom","washstand","washtub","waste","wastebasket","wasteland","wastepaper","wastewater","watch","watchband","watchdog","watchmaker","watchman","watchtower","watchword","water","watercolor","watercooler","watercraft","waterfall","waterfront","waterline","waterlog","watermelon","waterpower","waterproof","waterscape","watershed","waterside","waterspout","watertight","wave","wavelike","waves","wax","waxwork","way","waybill","wayfarer","waylaid","wayside","wayward","wealth","weather","weathercock","weatherman","weatherproof","week","weekday","weekend","weeknight","weight","whatever","whatsoever","wheel","wheelchair","wheelhouse","whip","whistle","whitecap","whitefish","whitewall","whitewash","widespread","wilderness","wind","window","wine","wing","winter","wipeout","wire","wish","without","woman","women","wood","woodshop","wool","word","work","worm","wound","wren","wrench","wrist","writer","writing","yak","yam","yard","yarn","year","yoke","zebra","zephyr","zinc","zipper","zoo"],n={t:["zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty"],o:["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],i:["","thousand","m-","b-","tr-","quadr-","quint-","sext-","sept-","oct-","non-"].map((e=>e.replace(/-$/,"illion"))),l:["","un","duo","tre","quattuor","quin","sex","octo","novem"],u:["","dec","vigint","trigint","quadragint","quinquagint","sexagint","septuagint","octogint","nonagint","cent"].map((e=>e?`${e}illion`:""))},s={h:"zeroeth",p:"first",m:"second",g:"third",k:"fourth",v:"fifth",$:"eighth",j:"ninth",O:"twelfth",q:"twentieth",N:"thirtieth",M:"fortieth",A:"fiftieth",R:"sixtieth",S:"seventieth",C:"eightieth",I:"ninetieth"},i={P:[["","Ⅰ","Ⅱ","Ⅲ","Ⅳ","Ⅴ","Ⅵ","Ⅶ","Ⅷ","Ⅸ"],["","Ⅹ","ⅩⅩ","ⅩⅩⅩ","ⅩⅬ","Ⅼ","ⅬⅩ","ⅬⅩⅩ","ⅬⅩⅩⅩ","ⅩⅭ"],["","Ⅽ","ⅭⅭ","ⅭⅭⅭ","ⅭⅮ","Ⅾ","ⅮⅭ","ⅮⅭⅭ","ⅮⅭⅭⅭ","ⅭⅯ"],["","Ⅿ","ⅯⅯ","ⅯⅯⅯ","Ⅿↁ","ↁ","ↁⅯ","ↁⅯⅯ","ↁⅯⅯⅯ","ↁↂ"],["","ↂ","ↂↂ","ↂↂↂ","ↂↇ","ↇ","ↇↂ","ↇↂↂ","ↇↂↂↂ","ↇↈ"],["","ↈ","ↈↈ","ↈↈↈ"]],D:[["","Ⅰ","ⅠⅠ","ⅠⅠⅠ","ⅠⅤ","Ⅴ","ⅤⅠ","ⅤⅠⅠ","ⅤⅠⅠⅠ","ⅠⅩ"],["","Ⅹ","ⅩⅩ","ⅩⅩⅩ","ⅩⅬ","Ⅼ","ⅬⅩ","ⅬⅩⅩ","ⅬⅩⅩⅩ","ⅩⅭ"],["","Ⅽ","ⅭⅭ","ⅭⅭⅭ","ⅭⅮ","Ⅾ","ⅮⅭ","ⅮⅭⅭ","ⅮⅭⅭⅭ","ⅭⅯ"],["","Ⅿ","ⅯⅯ","ⅯⅯⅯ","Ⅿↁ","ↁ","ↁⅯ","ↁⅯⅯ","ↁⅯⅯⅯ","ↁↂ"],["","ↂ","ↂↂ","ↂↂↂ","ↂↇ","ↇ","ↇↂ","ↇↂↂ","ↇↂↂↂ","ↇↈ"],["","ↈ","ↈↈ","ↈↈↈ"]]},l=(e,t)=>"function"==typeof t?t:t instanceof RegExp?c(e)?([,e])=>t.test(e):e=>t.test(e):c(e)&&t in e?([e])=>e===t:"number"==typeof t?c(e)?([,r])=>r===Object.values(e)[k(t)]:(e,r)=>r===k(t):"last"===t||"first"===t||"random"===t?l(e,{F:0,J:Object.values(e).length-1,random:Math.floor(Math.random()*Object.values(e).length)}[t]):(t=JSON.stringify(t),c(e)?([,e])=>JSON.stringify(e)===t:e=>JSON.stringify(e)===t),u=e=>"number"==typeof e&&!isNaN(e),c=e=>Object.getPrototypeOf(e)===Object.prototype,h=e=>Array.isArray(e),d=e=>u(e)&&Math.round(e)===e,p=e=>u(e)&&Math.round(e)!==e,b=e=>d(e)&&e>=0,m=e=>"object"==typeof e&&null!==e&&Symbol.iterator in e,g=e=>void 0===e,f=e=>Object.keys(e).length>0,w=(e,t,r=!1)=>("string"==typeof e&&(e=parseFloat(e)),"number"==typeof e?isNaN(e)?r?NaN:0:g(t)?e:Math.round(e*Math.pow(10,t))/Math.pow(10,t):r?NaN:0),k=(e,t=!1)=>isNaN(w(e,0,t))?NaN:Math.round(w(e,0,t)),y=(e,t=!0)=>(e=t?e%(2*Math.PI):e,e*=180/Math.PI),v=e=>`${null!=e?e:""}`.toUpperCase(),$=e=>`${null!=e?e:""}`.toLowerCase(),x=e=>{let[t,...a]=`${null!=e?e:""}`.split(/\s+/);return t=j(t,r)?t:`${v(t.charAt(0))}${$(t.slice(1))}`,f(a)&&(a=a.map((e=>j(e,r)?e:$(e)))),[t,...a].join(" ").trim()},j=(e,t=[],r="gui",a=!1)=>t.map((e=>e instanceof RegExp?e:new RegExp(`\\b${e}\\b`,r)))[a?"every":"some"]((t=>t.test(`${e}`))),O=(e,t,r="u")=>{t=new RegExp(t,r.replace(/g/g,""));const a=/[)(]/.test(t.toString()),o=`${e}`.match(t)||[];return a?o.slice(1):o.pop()},q=(e,t="")=>`${w(e)<0?"-":"+"}${t}${Math.abs(w(e))}`,E=e=>{var t;if(0===w(e))return"0";const r=$(e).replace(/[^\d.e+-]/g,""),a=O(r,/^-?[\d.]+/),o=k(O(r,/e([+-]?\d+)$/));if("string"==typeof a&&"string"==typeof o){let e=O(a,/^-?(\d+)/),n=O(a,/\.(\d+)/);if(h(e)&&h(n)&&(e=null===(t=e.pop())||void 0===t?void 0:t.replace(/^0+/,""),n=$(null==n?void 0:n.pop()).replace(/0+$/,""),!g(e)&&!g(n))){const t=Math.max(0,e.length+o),a=Math.max(0,n.length-o),s=[e.slice(0,t),n.slice(0,Math.max(0,o))].join("")||"0",i=[e.length-t>0?e.slice(e.length-t-1):"",n.slice(n.length-a)].join("");return["-"===r.charAt(0)?"-":"",s,"0".repeat(Math.max(0,t-s.length)),i.length?".":"","0".repeat(Math.max(0,a-i.length)),i].join("")}}return`${e}`},N=e=>{var t,r;const a=e=>{if(0===k(e))return"";const t=`${e}`.split("").map((e=>k(e)));let r="";if(3===t.length){const e=t.shift();if(g(e))throw new Error(`[U.verbalizeNum] Undefined digit in trio '${t.join("")}'.`);r+=e>0?`${n.t[e]} hundred`:"",e&&(t[0]||t[1])&&(r+=" and ")}return k(t.join(""))<=n.t.length?r+=n.t[k(t.join(""))]:r+=`${n.o[k(t.shift())]}${k(t[0])>0?`-${n.t[k(t[0])]}`:""}`,r},o=[];"-"===(e=E(e)).charAt(0)&&o.push("negative");const[s,i]=e.replace(/[,|\s|-]/g,"").split("."),l=null!==(r=null===(t=s.split("").reverse().join("").match(/.{1,3}/g))||void 0===t?void 0:t.map((e=>e.split("").reverse().join(""))))&&void 0!==r?r:[],u=[];for(;l.length;){const e=l.pop();if(e){const t=a(e);t&&u.push(`${t} ${c=l.length,c<n.i.length?n.i[c]:[n.l[c%10-1],n.u[Math.floor(c/10)]].join("")}`)}}var c;if(o.push(u.join(", ").trim()),"int"===getType(i)){"0"===s&&o.push("zero"),o.push("point");for(const e of i.split(""))o.push(n.t[k(e)])}return o.join(" ")},M=(e,t=[],r=0)=>{const a=[(e,t)=>new RegExp(`^${e}$`,"gu").test(`${t}`),(e,t)=>new RegExp(`^${e}$`,"gui").test(`${t}`)];if(r>=1){const e=[(e,t)=>new RegExp(`^${e}`,"gui").test(`${t}`),(e,t)=>new RegExp(`${e}$`,"gui").test(`${t}`),(e,t)=>new RegExp(`${e}`,"gui").test(`${t}`),(e,t)=>new RegExp(`${t}`,"gui").test(`${e}`)];a.push(...e),r>=2&&(a.push(...e.map((e=>(t,r)=>e(`${t}`.replace(/\W/g,""),`${r}`.replace(/\W/gu,""))))),r>=3&&a.push((()=>!1)))}const o=`${e}`,n=(()=>{if(h(t))return[...t];if(c(t))return Object.keys(t);try{return Array.from(t)}catch(e){throw new Error(`Haystack type must be [list, array], not ${typeof t}: ${JSON.stringify(t)}`)}})();if(!h(n))return!1;let s=-1;for(;!b(s);){const e=a.shift();if(!e)return!1;s=n.findIndex((t=>e(o,`${t}`)))}return!!b(s)&&(c(t)?Object.values(t)[s]:t[s])},z=(t,r,a=0)=>e.U.random(t,r,a),A=(e,t)=>z(e,t,1),R=(t,[r=0,a=1/0]=[])=>e.U.wrap(r,a,t),S=e=>R(e,[-180,180]),C=(e,t=0)=>0===t?k(e):w(e,t),I=(...e)=>e.flat().reduce(((e,t)=>t+e),0),P=(e,t)=>S(t-e),D=t=>e.U.random(t),F=(e,t=((e=!0,r=0,a=[])=>{t(e,r,a)}))=>{const r=e.findIndex(((e,r,a)=>t(e,r,a)));return-1!==r&&e.splice(r,1).pop()};const J=(e,t,r)=>{if(r||(r=t,t=!1),t||(t=e=>e),Array.isArray(e))return e.filter(r);const a=t||(()=>!0),o=r||(()=>!0);return Object.fromEntries(Object.entries(e).filter((([e,t])=>a(e)&&o(t))))},U=(e,t=!1)=>{let r;try{r=JSON.parse(JSON.stringify(e))}catch(a){if(t)throw new Error(`${a}`);m(e)&&(r=Object.assign({},e))}return r};const T=e=>{const t={};for(let[r,a]of Object.entries(e))c(a)&&(a=T(a)),setProperty(t,r,a);return t},L=e=>{const t={};for(const[r,a]of Object.entries(e))if((Array.isArray(a)||c(a))&&f(a))for(const[e,o]of Object.entries(L(a)))t[`${r}.${e}`]=o;else t[r]=a;return t};const W=(e,{x:t,y:r}={x:0,y:0})=>{[e,t,r]=[e,t,r].map((e=>C(e,2)));const[a,o]=[.4475*e,.5525*e],[n,s]=[t,r-e];return[[n,s,o,0,e,a,e,e,0,o,-a,e,-e,e,-o,0,-e,-a,-e,-e,0,-o,a,-e,e,-e]]};export default{T:()=>{var e,t,r;return null!==(r=null===(t=null===(e=null===game||void 0===game?void 0:game.user)||void 0===e?void 0:e.find((e=>e.L)))||void 0===t?void 0:t.id)&&void 0!==r&&r},W:u,B:c,isArray:h,G:d,H:p,V:b,Z:m,K:e=>"string"==typeof e&&/^<.*>$/u.test(e),X:g,Y:e=>!g(e),_:e=>0===Object.keys(e).length,ee:f,te:(...e)=>{function t(e,r){if(typeof e!=typeof r)return!1;if([e,r].includes(null))return e===r;if("object"==typeof e){if(Array.isArray(e)){if(!Array.isArray(r))return!1;if(e.length!==r.length)return!1;for(let a=0;a<e.length;a++)if(!t(e[a],r[a]))return!1;return!0}if(c(e))return!(!c(r)||Object.keys(e).length!==Object.keys(r).length)&&(t(Object.keys(e),Object.keys(r))&&t(Object.values(e),Object.values(r)));try{return JSON.stringify(e)===JSON.stringify(r)}catch(e){return!1}}return e===r}let r=e.pop();for(;e.length;){if(!t(r,e[0]))return!1;r=e.pop()}return!0},re:w,ae:k,oe:y,ne:(e,t=!0)=>(e=t?e%360:e,e*=Math.PI/180),se:j,ie:O,le:v,ue:$,ce:x,he:e=>`${null!=e?e:""}`.split(/\s/).map(((e,r)=>r&&j(e,t)?$(e):x(e))).join(" ").trim(),de:e=>(/^<|\u00AD|\u200B/.test(`${e}`),`${e}`),pe:e=>`${e}`.replace(/\u00AD|\u200B/gu,""),be:(e,t,r)=>1===w(t)?e:null!=r?r:`${e.replace(/y$/,"ie").replace(/s$/,"se")}s`,me:(e,t=!0)=>{const r=e.pop();return[e.join(", "),t?",":""," and ",r].join("")},ge:(e,t)=>`${e}`.length>t?`${`${e}`.slice(0,t-3)}…`:`${e}`,fe:e=>`${e}`.replace(/\b(a|A)\s([aeiouAEIOU])/gu,"$1n $2"),we:q,ke:(e,t)=>{const[r,a]=`${w(e)}`.split(/\./);return"int"===getType(a)?a.length>t?`${w(e,t)}`:a.length<t?`${r}.${a}${"0".repeat(t-a.length)}`:`${w(e)}`:`${r}.${"0".repeat(t)}`},ye:E,ve:N,$e:(e,t=!1)=>{var r,a;if(t){const[t,o]=null!==(r=$(N(e)).match(/.*?[-|\s]?(\w*?)$/))&&void 0!==r?r:["",""];return t.replace(new RegExp(`${o}$`),null!==(a=s[o])&&void 0!==a?a:`${o}th`)}return/\.|1[1-3]$/.test(`${e}`)?`${e}th`:`${e}${["th","st","nd","rd","th","th","th","th","th","th"][k(`${e}`.charAt(`${e}`.length-1))]}`},xe:(e,t=!0)=>{if(p(e))throw new Error(`Error: Can't Romanize Floats (${e})`);if(e>=4e5)throw new Error(`Error: Can't Romanize >= 400,000 (${e})`);if(e<=0)throw new Error(`Error: Can't Romanize <= 0 (${e})`);const r=i[t?"P":"D"],a=E(e).split("").reverse().map(((e,t)=>r[t][k(e)])).reverse().join("");return t?a.replace(/ⅩⅠ/gu,"Ⅺ").replace(/ⅩⅡ/gu,"Ⅻ"):a},je:(e=200)=>{const t=a.split(/\n?\s+/g),r=[...t[z(0,t.length-1)]];for(;r.length<e;)r.push(...t);return r.length=e,`${x(r.join(" ")).trim().replace(/[^a-z\s]*$/iu,"")}.`},Oe:(e=1,t=o)=>[...Array(e)].map((()=>D(t))).join(" "),qe:M,Ee:(e,t)=>M(e,t,0),Ne:z,Me:A,ze:()=>1===z(0,1,1),Ae:R,Re:S,Se:C,Ce:I,Ie:(...e)=>I(...e)/e.flat().length,Pe:({x:e,y:t},{x:r,y:a})=>Math.pow(Math.pow(e-r,2)+Math.pow(t-a,2),.5),De:({x:e,y:t},{x:r,y:a},{x:o=0,y:n=0}={x:0,y:0})=>(e-=o,t-=n,r-=o,a-=n,S(y(Math.atan2(a-t,r-e)))),Fe:P,Je:D,Ue:e=>A(0,e.length-1),Te:(t,r=0)=>{const a=e.U.wrap(t);return r--,function*(){for(;;)r++,yield a(r)}()},Le:e=>e.length?e[e.length-1]:void 0,unique:e=>{const t=[];return e.forEach((e=>{t.includes(e)||t.push(e)})),t},We:(e,t)=>e.splice(e.findIndex((e=>e===t))),Be:F,Ge:(e,t)=>F(e,((e,r)=>r===t)),remove:(e,t)=>{var r;if(h(e)){const r=e.findIndex(l(e,t));if(r>=0){let t;for(let a=0;a<=e.length;a++)a===r?t=e.shift():e.push(e.shift());return t}}else if(c(e)){const[a]=null!==(r=Object.entries(e).find(l(e,t)))&&void 0!==r?r:[];if(a){const t=e[a];return delete e[a],t}}return!1},replace:(e,t,r)=>{let a;if(c(e)){if([a]=Object.entries(e).find(l(e,t))||[!1],!1===a)return!1}else if(h(e)&&(a=e.findIndex(l(e,t)),-1===a))return!1;return"number"!=typeof a&&(a=`${a}`),e[a]="function"==typeof r?r(e[a],a):r,!0},He:(e,t=(()=>!0))=>[J(e,t),J(e,((e,r)=>!t(e,r)))],Ve:function(e,t,r){return r||(r=t,t=!1),t||(t=e=>e),Array.isArray(e)?e.map(r):Object.fromEntries(Object.entries(e).map((([e,a])=>[t(e,a),r(a,e)])))},Ze:J,Ke:(e,t)=>{Array.isArray(e)?e.forEach(t):Object.entries(e).forEach((([e,r])=>t(r,e)))},Qe:(e,t=[])=>J(e,(e=>t.includes(`${e}`))),Xe:U,Ye:function e(t,r,{_e:a=!1,et:o=!1}={}){t=a?t:U(t,o);for(const[a,n]of Object.entries(r))null!==n&&"object"==typeof n?(void 0===t[a]&&(t[a]=Array.isArray(n)?[]:new(Object.getPrototypeOf(n).constructor())),t[a]=e(t[a],n,{_e:!0,et:o})):t[a]=n;return t},tt:T,rt:L,ot:(e,t,r)=>{if("function"==typeof t){const a={[e]:(...e)=>t(...e)}[e];return r?a.bind(r):a}return!1},nt:e,get:function(t,r,a){if(a){const o=O(e.st(t,r,a),/[\d.]+/);if("string"==typeof o)return w(o);throw new Error(`Unable to extract property '${r}' in '${a}' units from ${t}`)}return e.st(t,r)},set:(t,r)=>e.set(t,r),it:W,lt:(e,t)=>{const[[r,a,...o]]=W(e,t),n=[`m ${r} ${a}`];return o.forEach(((e,t)=>{t%6==0&&n.push("c"),n.push(e)})),n.push("z"),n.join(" ")},ut:e=>`${e}`.replace(/([A-Z])|\s/g,"-$1").replace(/^-/,"").trim().toLowerCase(),ct:(e,t)=>q(C(P(e,t),2)).replace(/^(.)/,"$1=")};