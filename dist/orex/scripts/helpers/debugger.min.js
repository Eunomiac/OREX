import{C as e,U as o,XItem as r,XGroup as t,XPool as n,XDie as a,XTermType as i,XOrbitType as s,XRoll as l}from"./bundler.js";const c=(o,r,...t)=>{if(e.o){const e=Object.entries({...d.t,...d[o]??{}}).map((([e,o])=>`${e}: ${o};`)).join(" ");t.length?"NOGROUP"===t[0]?console.log(`%c${r}`,e):(console.groupCollapsed(`%c${r}`,e,...t),console.trace(),console.groupEnd()):console.groupCollapsed(`%c${r}`,e)}},d={title:{background:"linear-gradient(to right,#da1b60,#ff8a00)",color:"#100e17","font-family":"Candal","font-size":"18px",padding:"0 30px 0 10px","margin-left":"-20px"},display:{background:"#EDB620",color:"black","font-family":"AlverataInformalW01-Regular","font-size":"16px",padding:"0 10px 0 10px","font-weight":"bold"},t:{background:"#000000",color:"#EDB620","font-family":"Pragmata Pro",padding:"0 20px 0 20px"},info:{background:"transparent",color:"white","font-size":"11px","font-weight":"normal","font-family":"Fira Code",padding:"0 30px 0 30px"},error:{color:"#FF0000",background:"#950A0F","font-weight":"bold",padding:"0 800px 0 50px"},groupEnd:{}},x={log:(e,...o)=>c("base",e,...o.length?o:["NOGROUP"]),title:e=>c("title",e,"NOGROUP"),display:(e,...o)=>c("display",e,...o.length?o:["NOGROUP"]),info:(e,...o)=>c("info",e,...o.length?o:["NOGROUP"]),error:(e,...o)=>c("error",e,...o.length?o:["NOGROUP"]),i:e=>c("base",e),l:e=>c("title",e),g:e=>c("display",e),p:e=>c("info",e),u:e=>c("error",e),groupEnd:()=>console.groupEnd()},g={m:()=>{const e=new n(r.P,{id:"translate-box",h:["translate-box"],k:{set:{O:0,R:0},to:{x:"+=500",duration:5,v:"power3.inOut",repeat:-1,D:!0}}}),o=new t(e,{id:"scale-box-1",h:["scale-box"],k:{set:{O:0,R:0},to:{scale:2,duration:15,v:"sine.inOut",repeat:-1,D:!0}}}),s=new t(o,{id:"scale-box-2",h:["extra-scale-box"],k:{set:{O:0,R:0},to:{scale:3,duration:5,v:"sine.inOut",repeat:-1,D:!0}}}),l=new t(s,{id:"rotate-box-1",h:["rotate-box"],k:{set:{O:0,R:0},to:{rotation:"+=360",duration:2,v:"none",repeat:-1}}}),c=new t(l,{id:"rotate-box-2",h:["rotate-box"],k:{set:{O:0,R:0},to:{rotation:"-=360",duration:2,v:"power4.inOut",repeat:-1}}}),d=new a(c,{id:"test-die",type:i.$,value:3,color:"lime",size:50}),g=[{x:.5,y:0,background:"yellow"},{x:0,y:1,background:"cyan"},{x:1,y:1,background:"magenta"}].map((({x:e,y:o,background:t},n)=>new r(d,{id:`die-marker-${n+1}`,h:["x-marker"],k:{set:{height:10,width:10,x:50*e,y:50*o,background:t}}}))),y=["yellow","cyan","magenta"].map(((e,o)=>new r(r.P,{id:`x-marker-${o+1}`,h:["x-marker"],k:{set:{height:10,width:10,x:100+20*o,y:500+40*o,background:e}}})));y.forEach(((e,o)=>{e.C((()=>{g[o].G&&e.set(g[o].N)}))})),[d,...g,...y].forEach((e=>e.initialize())),x.log("Test Die Objs =>",g,y,e,o,l,d)},U:(o,{id:r,x:t,y:a,size:i=200,color:s="cyan"})=>new n(o,{id:r,k:{set:{height:i,width:i,left:t-.5*i,top:a-.5*i,T:s}},j:e.F}),L:({value:e,color:o="white",A:t="black",B:n="black",size:s=50}={})=>new a(r.P,{id:"x-die",type:i.$,value:e,color:o,A:t,B:n,size:s}),I:async()=>{const e=[{x:950,y:650,size:400,color:"rgba(255, 0, 0, 0.5)",W:{q:[6,"cyan",[2,"lime"]],H:[5,"silver",[3,"gold"],[4,"rgba(0, 0, 255, 0.5)"]],inner:[3,"red"]}}].map((async({x:e,y:t,size:n,color:l,W:c},d)=>{const y=g.U(r.P,{id:"POOL",x:e,y:t,size:n,color:l});await y.initialize(),globalThis.CIRCLE??=[],globalThis.CIRCLE.push(y);for(const[e,[t,n,...l]]of Object.entries(c)){for(let s=0;s<t;s++){const t=new a(r.P,{id:"xDie",type:i.$,value:o.J(0,9),color:"string"==typeof n?n:void 0});await y.K(t,e)||x.error(`Error rendering xDie '${t.id}'`)}if(l.length){x.log("Nested Pools",l);for(const[t,n]of l){const l=g.U(r.P,{id:"subPool",x:0,y:0,size:75,color:n});await y.K(l,e),await l.initialize();for(let e=0;e<t;e++){const e="xDie";try{await l.K(new a(r.P,{id:e,type:i.$,value:o.J(0,9),color:"string"==typeof n?n:void 0}),s.M)}catch(o){x.error(`Error rendering xDie '${e}'`)}}}}}}));return await Promise.allSettled(e),globalThis.POOLS=e,Promise.allSettled(e)},S:async e=>{const o=new l(r.P,{id:"ROLL",k:{set:{x:500,y:500,height:400,width:400}}});await o.initialize();const t=["white","cyan","gold","lime"],n=e.flatMap((e=>{const o=t.shift();return[...new Array(e)].map((()=>new a(r.P,{id:"xDie",type:i.$,value:0,color:o})))}));return await Promise.allSettled(n.map((e=>e.initialize()))),o.V({[s.M]:n}),o}};export{x as default,g as TESTS};