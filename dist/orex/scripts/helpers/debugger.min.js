import{C as e,U as o,XItem as t,XGroup as r,XPool as n,XDie as a,XTermType as i,XOrbitType as s,XRoll as l}from"./bundler.js";const c=(o,t,...r)=>{if(e.o){const e=Object.entries({...d.t,...d[o]??{}}).map((([e,o])=>`${e}: ${o};`)).join(" ");r.length?"NOGROUP"===r[0]?console.log(`%c${t}`,e):(console.groupCollapsed(`%c${t}`,e,...r),console.trace(),console.groupEnd()):console.groupCollapsed(`%c${t}`,e)}},d={title:{background:"linear-gradient(to right,#da1b60,#ff8a00)",color:"#100e17","font-family":"Candal","font-size":"18px",padding:"0 30px 0 10px","margin-left":"-20px"},display:{background:"#EDB620",color:"black","font-family":"AlverataInformalW01-Regular","font-size":"16px",padding:"0 10px 0 10px","font-weight":"bold"},t:{background:"#000000",color:"#EDB620","font-family":"Pragmata Pro",padding:"0 20px 0 20px"},info:{background:"transparent",color:"white","font-size":"11px","font-weight":"normal","font-family":"Fira Code",padding:"0 30px 0 30px"},error:{color:"#FF0000",background:"#950A0F","font-weight":"bold",padding:"0 800px 0 50px"},groupEnd:{}},x={log:(e,...o)=>c("base",e,...o.length?o:["NOGROUP"]),title:e=>c("title",e,"NOGROUP"),display:(e,...o)=>c("display",e,...o.length?o:["NOGROUP"]),info:(e,...o)=>c("info",e,...o.length?o:["NOGROUP"]),error:(e,...o)=>c("error",e,...o.length?o:["NOGROUP"]),i:e=>c("base",e),l:e=>c("title",e),g:e=>c("display",e),p:e=>c("info",e),u:e=>c("error",e),groupEnd:()=>console.groupEnd()},y={m:()=>{const e=new n(t.P,{id:"translate-box",h:["translate-box"],k:{set:{O:0,R:0},to:{x:"+=500",duration:5,$:"power3.inOut",repeat:-1,v:!0}}}),o=new r(e,{id:"scale-box-1",h:["scale-box"],k:{set:{O:0,R:0},to:{scale:2,duration:15,$:"sine.inOut",repeat:-1,v:!0}}}),s=new r(o,{id:"scale-box-2",h:["extra-scale-box"],k:{set:{O:0,R:0},to:{scale:3,duration:5,$:"sine.inOut",repeat:-1,v:!0}}}),l=new r(s,{id:"rotate-box-1",h:["rotate-box"],k:{set:{O:0,R:0},to:{rotation:"+=360",duration:2,$:"none",repeat:-1}}}),c=new r(l,{id:"rotate-box-2",h:["rotate-box"],k:{set:{O:0,R:0},to:{rotation:"-=360",duration:2,$:"power4.inOut",repeat:-1}}}),d=new a(c,{id:"test-die",type:i.C,value:3,color:"lime",size:50}),y=[{x:.5,y:0,background:"yellow"},{x:0,y:1,background:"cyan"},{x:1,y:1,background:"magenta"}].map((({x:e,y:o,background:r},n)=>new t(d,{id:`die-marker-${n+1}`,h:["x-marker"],k:{set:{height:10,width:10,x:50*e,y:50*o,background:r}}}))),g=["yellow","cyan","magenta"].map(((e,o)=>new t(t.P,{id:`x-marker-${o+1}`,h:["x-marker"],k:{set:{height:10,width:10,x:100+20*o,y:500+40*o,background:e}}})));g.forEach(((e,o)=>{e.D((()=>{y[o].G&&e.set(y[o].N)}))})),[d,...y,...g].forEach((e=>e.initialize())),x.log("Test Die Objs =>",y,g,e,o,l,d)},T:(o,{id:t,x:r,y:a,size:i=200,color:s="cyan"})=>new n(o,{id:t,k:{set:{height:i,width:i,left:r-.5*i,top:a-.5*i,U:s}},j:e.F}),A:({value:e,color:o="white",L:r="black",B:n="black",size:s=50}={})=>new a(t.P,{id:"x-die",type:i.C,value:e,color:o,L:r,B:n,size:s}),I:async()=>{const e=[{x:950,y:650,size:400,color:"rgba(255, 0, 0, 0.5)",M:{W:[6,"cyan",[2,"lime"]],q:[5,"silver",[3,"gold"],[4,"rgba(0, 0, 255, 0.5)"]],inner:[3,"red"]}}].map((async({x:e,y:r,size:n,color:l,M:c},d)=>{const g=y.T(t.P,{id:"POOL",x:e,y:r,size:n,color:l});await g.initialize(),globalThis.CIRCLE??=[],globalThis.CIRCLE.push(g);for(const[e,[r,n,...l]]of Object.entries(c)){for(let s=0;s<r;s++){const r=new a(t.P,{id:"xDie",type:i.C,value:o.H(0,9),color:"string"==typeof n?n:void 0});await g.J(r,e)||x.error(`Error rendering xDie '${r.id}'`)}if(l.length){x.log("Nested Pools",l);for(const[r,n]of l){const l=y.T(t.P,{id:"subPool",x:0,y:0,size:75,color:n});await g.J(l,e),await l.initialize();for(let e=0;e<r;e++){const e="xDie";try{await l.J(new a(t.P,{id:e,type:i.C,value:o.H(0,9),color:"string"==typeof n?n:void 0}),s.K)}catch(o){x.error(`Error rendering xDie '${e}'`,o)}}}}}}));return await Promise.allSettled(e),globalThis.POOLS=e,Promise.allSettled(e)},S:async(e,o={},r=[])=>{o={x:0,y:0,height:400,width:400,V:"white",X:"cyan",...o};const{V:n,X:c,...d}=o;d["U"]=c;const x=new l(t.P,{id:"ROLL",k:{set:d}});await x.initialize();let y=e.flatMap((e=>{const o=n;return[...new Array(e)].map((()=>new a(t.P,{id:"xDie",type:i.C,value:0,color:o})))}));return await Promise.allSettled(y.map((e=>e.initialize()))),r.forEach((e=>{const o=Math.floor(Math.random()*y.length);y=[...y.slice(0,o),e,...y.slice(o)]})),await x.Y({[s.K]:y}),x},Z:e=>{document.addEventListener("click",(o=>{x.display("Click Event Triggered"),x.log("Objects",{event:o,focus:e}),x.log(`Event Position: {x: ${o.pageX}, y: ${o.pageY}}`),x.log(`Focus Position: {x: ${e.global.x}, y: ${e.global.y}}`),x.log(`Distance: ${e._({x:o.pageX,y:o.pageY})}`),x.log(`Angle: ${e.ee({x:o.pageX,y:o.pageY})}`)}))}};export{x as default,y as TESTS};