import{C as t,gsap as s,U as i,XItem as e}from"../helpers/bundler.js";class h extends e{constructor(t,s){super({parent:s,t:!0,i:{set:{height:2,rotation:0,width:0,transformOrigin:"0% 50%",top:"50%",left:"50%"}}}),this.options.h.unshift("x-arm"),this.o=t}async initialize(t=0,s=0){await this.u(),this.o.parent=this,await this.o.u(),this.o.set({right:-1*this.o.width}),t!==this.width&&this.to({width:t,duration:1}),s!==this.rotation&&this.to({rotation:s,duration:1})}}export default class r extends e{constructor(t){super(t),this.l=1,this.p=[],this.m=[],this.g=[],this.options.h.unshift("x-group"),this.O=t,this.initialize()}static get I(){return i.M({...super.I},{R:!1,h:i.unique([...super.I.h,"x-group"]),X:i.$("xitem")})}get j(){return this.l}set j(t){this.l=t}get v(){return this.m.flat().map((([t,s])=>s))}async initialize(){await this.D.u(),this.k()}k(){const e=this.O.q??[...t.A],h=(Math.min(...e),Math.max(...e));for(this.g=e.map((t=>s.C.B(0,h,0,this.size/2,t))),this.j=e.length;this.j>this.m.length;)this.m.push([]);for(;(this.m.length||1)>this.j;){const t=this.m.pop();if(i.isArray(t)&&t.length>0)throw new Error(`${this.constructor.name??"XItem"} '${this.id}' can't remove orbitals unless they're empty.`)}}async F(t,s){s=s??0;const i=new h(t,this);this.m[s].push([i,t]),i.initialize(this.g[s],0)}async G(){for(const[t]of this.m.flat())t.to({rotation:i.H(0,360),duration:1,J:"sine.inOut"})}}