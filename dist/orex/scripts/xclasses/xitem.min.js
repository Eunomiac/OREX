import{gsap as t,U as e,XElem as i}from"../helpers/bundler.js";export default class r extends Application{constructor({t=[],...e}){super(e),this.i=!1,this.h=new Set,this.o=new Set,this.options.t.push(...t),this.u=Object.assign(e,{t:this.options.t}),null===e.parent?this.l=null:e.parent instanceof r?this.l=e.parent:this.l=r.g,this.p=new i({m:this,A:e.A})}static get O(){return e.P(super.O,{C:!1,t:["x-item"],R:e.T("xitem")})}static get g(){return r.k}static async j(){return r.g&&r.g.X(),r.k=new r({id:"x-root",parent:null}),r.k.initialize()}get $(){return this.p.$}get v(){return this.p.v}get parent(){return this.l}set parent(t){this.l=t??r.g}get I(){return this.h}get S(){return this.I.size>0}D(t){t.parent=this,this.I.add(t)}H(t){this.I.delete(t)}q(t,i=!1){const s=e.B(t)?r:t;return i?Array.from(this.I.values()).map((t=>t.q(void 0,!0))).flat().filter((t=>t instanceof s)):Array.from(this.I.values()).filter((t=>t instanceof s))}async initialize(){return this.F?Promise.resolve(!0):await this.p.G(!0)?Promise.allSettled(this.q().map((t=>t.initialize()))).then((()=>(this.i=!0,Promise.resolve(!0))),(()=>Promise.resolve(!1))):Promise.resolve(!1)}get J(){return this.K}get F(){return this.i}get x(){return this.p.x}get y(){return this.p.y}get L(){return this.p.L}get rotation(){return this.p.rotation}get scale(){return this.p.scale}get global(){return this.p.global}get height(){return this.p.height}get width(){return this.p.width}get size(){return this.p.size}get M(){return this.p.M}get G(){return this.p.G.bind(this.p)}get N(){return this.p.N.bind(this.p)}U(e){this.o.add(e),t.V.add(e)}W(e){this.o.delete(e),t.V.remove(e)}get set(){return this.p.set.bind(this.p)}get to(){return this.p.to.bind(this.p)}get from(){return this.p.from.bind(this.p)}get Y(){return this.p.Y.bind(this.p)}X(){this.S&&this.q().forEach((t=>t.X())),this.o.forEach((e=>t.V.remove(e))),this.o.clear(),this.parent instanceof r&&this.parent.H(this),this.J&&(t.Z(this.$),this.v.remove())}getData(){const t=super.getData();return Object.assign(t,{id:this.id,t:this.options.t.join(" ")}),t}async _(){if(!this.p.tt)return console.warn("Attempt to render an unready Application"),Promise.resolve(!1);try{return await this.et(!0,{}),Promise.resolve(!0)}catch(t){return this.it=Application.RENDER_STATES.ERROR,Hooks.onError("Application#render",t,{rt:`An error occurred while rendering ${this.constructor.name} ${this.st}`,log:"error"}),Promise.resolve(!1)}}}