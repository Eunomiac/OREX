import{gsap as t,U as e,XElem as i}from"../helpers/bundler.js";export default class r extends Application{constructor(t){super(t),this.t=!1,this.i=new Set,this.h=new Set,this.o=t,null===t.parent?this.u=null:t.parent instanceof r?this.u=t.parent:this.u=r.l,this.g=new i({p:this,m:t.m})}static get A(){return e.P(super.A,{O:!1,C:[...super.A.C,"x-item"],R:e.T("xitem")})}static get l(){return r.k}static async X(){return r.l&&r.l.$(),r.k=new r({id:"x-root",parent:null}),r.k.initialize()}get j(){return this.g.j}get v(){return this.g.v}get parent(){return this.u}set parent(t){this.u=t??r.l,this.I&&this.u.I&&this.u.S(this)}get D(){return this.i}get H(){return this.D.size>0}q(t){this.D.add(t)}B(t){this.D.delete(t)}F(t,i=!1){const s=e.G(t)?r:t;return i?Array.from(this.D.values()).map((t=>t.F(void 0,!0))).flat().filter((t=>t instanceof s)):Array.from(this.D.values()).filter((t=>t instanceof s))}async initialize(){return this.J?Promise.resolve(!0):await this.g.K(!0)?Promise.allSettled(this.F().map((t=>t.initialize()))).then((()=>(this.t=!0,Promise.resolve(!0))),(()=>Promise.resolve(!1))):Promise.resolve(!1)}get I(){return this.L}get J(){return this.t}get x(){return this.g.x}get y(){return this.g.y}get M(){return this.g.M}get rotation(){return this.g.rotation}get scale(){return this.g.scale}get global(){return this.g.global}get height(){return this.g.height}get width(){return this.g.width}get size(){return this.g.size}get N(){return this.g.N}get K(){return this.g.K.bind(this.g)}get S(){return this.g.S.bind(this.g)}U(e){this.h.add(e),t.V.add(e)}W(e){this.h.delete(e),t.V.remove(e)}get set(){return this.g.set.bind(this.g)}get to(){return this.g.to.bind(this.g)}get from(){return this.g.from.bind(this.g)}get Y(){return this.g.Y.bind(this.g)}$(){this.H&&this.F().forEach((t=>t.$())),this.h.forEach((e=>t.V.remove(e))),this.h.clear(),this.parent instanceof r&&this.parent.B(this),this.I&&(t.Z(this.j),this.v.remove())}getData(){const t=super.getData();return Object.assign(t,{id:this.id,C:this.options.C.join(" ")}),t}async _(){if(!this.g.tt)return console.warn("Attempt to render an unready Application"),Promise.resolve(!1);try{return await this.et(!0,{}),Promise.resolve(!0)}catch(t){return this.it=Application.RENDER_STATES.ERROR,Hooks.onError("Application#render",t,{rt:`An error occurred while rendering ${this.constructor.name} ${this.st}`,log:"error"}),Promise.resolve(!1)}}}